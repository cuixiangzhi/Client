图形学
	图形 线框图 真实感图形 图像 图形方程 几何属性 非几何属性
	渲染流水线--->CPU提供VBO/VAO给GPU---对设定的顶点挨个执行顶点着色器,顶点着色器Uniform(顶点一致)和Attribute(顶点私有)由CPU提供,此阶段进行MVP变换
			  --->图元装配--->光栅化,根据输入图形计算出像素片段-->片段着色器-->像素归属测试(多窗口)-->裁剪测试-->Alpha测试-->深度测试-->模板测试-->颜色混合
硬件
	显卡分类
		独立显卡 集成显卡 核心显卡
	显卡型号
		ADM RadeOn HD 美国AMD
		NVIDA Geforce GTX 美国英伟达
		POWERVRSGX 英国Imagination
		MAIL 英国ARM
		Andreno 美国高通
	显示器接口
		VGA接口输入是模拟信号,通过显卡的RAMDAC转换
		HDMI接口输入是数字信号,显卡直接传输
		DVI接口输入是数字信号,显卡直接传输
	显示器刷新
		显示器刷新屏幕的频率是稳定的(根据显卡帧缓存数据扫描刷新屏幕完成一次是一帧,显示器一般工作频率为60帧,有的是72帧)
		显示器每刷新完成一帧后去显卡获取帧缓存数据
			单缓冲不开启垂直同步,显示器获取的帧数据会产生撕裂
			单缓冲开启垂直同步,显示器获取的帧数据不会产生撕裂,显示器会等待绘制完成在读取帧数据(G-Sync算法)
			双缓冲不开启垂直同步,显卡一直在Render->SwapBuffer,此时会产生很多无效帧数据(高端显卡),不会产生画面撕裂
			双缓冲开启垂直同步,显卡阻塞在Render->SwapBuffer,直到显示器同步信号到来
			低帧率开启会导致更卡,因为显卡计算太慢,计算不完就只能等下一帧切换画面(G-Sync算法会减少这个延迟时间)
			高帧率开启后导致延迟,因为显卡计算阻塞,如果下一帧计算量太大(超过了显示器的刷新一帧的时间),那么显示器会保持一幅画面两帧,会感觉到不流畅
驱动
	规范
		OpenGL规范定义了特征和行为,定义了API集合,各个显卡硬件厂商制作遵循该规范的驱动程序
	实现
		opengl的实现是由驱动厂商完成的,windows平台微软也实现了一个
		directx是windows平台的图形库,不是标准
		opengles是android平台的实现
		meta是ios平台的图形库
	加速
		硬件加速是指opengl的部分实现通过驱动程序交给硬件执行
		directx和opengl想实现硬件加速需要硬件支持
坐标
	世界坐标系
		左手坐标系 x右y上z里
		右手坐标系 x右y上z内
	屏幕坐标系 
		unity中左下角为(0,0) 右上角为显示屏幕的(w,h)
		ngui中中心点为(0,0)
		gui左上角为(0,0)
		glut窗口左上角为(0,0)
	模型坐标系
		局部坐标系,是指模型本身的坐标系,以物体中心为原点,有自己的xyz轴
		默认放入世界坐标系的模型,局部坐标系和世界坐标系是重合的
	视图坐标系
		摄像机局部坐标系
	视口坐标系
		屏幕坐标系的子窗口,坐标为(x,y),大小为(w,h) 
		摄像机的viewport选项用于控制视口在屏幕下的范围(x,y),(w,h) 都是(0,1的值)  xy标记起始点,wh标记宽高
颜色模型
		RGB模型,通过RGB三基色来调节颜色
		HSV模型,通过色调、亮度、饱和度来调节颜色
		RGB和HSV可以通过公式进行转换