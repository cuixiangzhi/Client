硬件相关
	独立显卡通过数据线与显示器连接
	VGA接口输入是模拟信号,通过显卡的RAMDAC转换
	HDMI&DVI接口输入是数字信号,显卡直接传输
	刷新频率是指CRT每秒能画几帧
	显示器的硬件信息显卡可以读取到
	PC端显卡包括ADM RadeOn HD和NVIDA Geforce GTX
	移动端显卡包括POWERVRSGX(苹果)、MAIL(华为)、高通(小米)
	垂直同步 显卡的一个模块每个固定间隔产生一个信号(间隔根据显示器刷新频率范围设定,一般为60HZ)
	         这个信号每次都会发送给CRT显示器
	         打开垂直同步是指这个信号也发送给显卡的图形处理模块
驱动相关
	openGL是一个规范,各个显卡硬件厂商制作遵循该规范的驱动程序
	驱动跟硬件关联,OpenGL个DX都是调用了驱动的API
	OpenGL跨平台 glut跨平台输入
	OPENGL ES用于ANDROID 
	METAL用于IPHONE 
	DX只能用于WIN
坐标系
	世界坐标系
		左手坐标系 x右y上z里
		右手坐标系 x右y上z内
	屏幕坐标系 
		unity中左下角为(0,0) 右上角为显示屏幕的(w,h)
		ngui中中心点为(0,0)
		gui左上角为(0,0)
	模型坐标系
		局部坐标系,是指模型本身的坐标系,以物体中心为原点,有自己的xyz轴
		默认放入世界坐标系的模型,局部坐标系和世界坐标系是重合的
	视图坐标系
		摄像机局部坐标系
坐标变换
图元显示
	显示列表 预编译的指令集合,存放在GPU显示列表内存,不可修改,不是所有的命令都可以使用
			 创建显示列表 GLuint id = glGenLists(1);
			 			  glNewList(id,GL_TRIANGLE);
			 			  	glBegin();
			 			  	^^^^^^^^
			 			  	glEnd();
			 			  glEndList();
			 绘制显示列表 glCallList(id);
			 删除显示列表 glDeleteLists(id,1);
	顶点数组 减少glVertex调用次数
			 数组有6种,GL_VERTEX顶点 GL_COLOR颜色RGB GL_NORMAL法线 GL_INDEX颜色索引 GL_TEXCOORD纹理坐标
			 启用/禁用数组 glEnableClientState() glDisableClientState()
			 指定数组位置 glVertexPointer glNormalPointer glColorPointer glIndexPointer glTexCoordPointer 
			 绘制顶点数组 glDrawArrays(GL_TRIANGLES, 0, 36)  有重复的顶点
			 			  glDrawElements(GL_TRIANGLES, 36, GL_UNSIGNED_BYTE, ptr); 无重复顶点
	VBO模式 网格信息存放在显存内,有两份内存
			创建缓存数组 glGenBuffers(1,&id);
			绑定数组类型 glBindBuffer(GL_ARRAY_BUFFER_ARB,id);
			更新缓存数据 glBufferData(GL_ARRAY_BUFFER_ARB,size,ptr,GL_STREAM_DRAW); 静态读写 动态读写 帧读写

			绘制缓存数据 glEnableClientState();
						 glVertexPointer(3,GL_FLOAT,0,0);
						 glDrawElements(GL_TRIANGLES, 36, GL_UNSIGNED_BYTE, ptr);
						 glDisableClientState();
			删除缓存数组 glDeleteBuffers(id);
	位图字体
			像素点构成的字体
图元状态
		颜色
			模式 RGBA模式 索引模式
			亮度    颜色亮度
			饱和度  颜色纯度
			混合	Additive模式(a+b)变亮 Blend模式a*alpha + b*(1-alpha)透明 正片叠底a*b变暗
			空间	GAMMA空间&LINER空间
					现实中几乎所有图片默认都是存储为GAMMA格式,即经过0.45gamma纠正 
				  	显示器又做了2.2的逆向纠正,使得最终结果保持一致
				  	光照计算是线性的,因此输入图片是线性的跨平台才能更精确
					UNITY中sRGB选项表示该图片是GAMMA图片,注意:Default格式才有这个选项
					LINER需要OPENGLES3.0支持
 
图元光栅
		三角形顶点环绕逆时针为正向,和摄像机法线方向叉乘可以求出朝向摄像机还是背向摄像机 
		线框图扫描转换,根据直线、曲线等等相关方程算法计算像素点
		三角面扫描转换,根据pnpoly算法计算像素点在区域内还是区域外,即射线与多边形的交点是奇数还是偶数
粒子系统
动画系统
OpenGL  
		模型坐标系(模型矩阵)->世界坐标系(VIEW矩阵)->摄像机坐标系(PROJ矩阵)->CVV裁剪坐标系(透视除法)->NDC坐标系(视口变换)->屏幕坐标系
		OPENGL矩阵乘法是左乘,矩阵变换顺序为 P V M缩放 M旋转 M平移 3DPOINT

		M矩阵 TRS,模型内部坐标点通过M矩阵变换为世界坐标点
		V矩阵 TR逆矩阵R逆T逆,世界坐标点通过V矩阵变换为相机坐标点
		P矩阵 ,相机坐标点通过P矩阵变换为裁剪坐标点

欧拉角
	旋转顺序: 物体坐标系下,绕xyz三个轴分别进行旋转,旋转是有先后顺序的,顺序不同结果不同
	坐标系:   旋转之后物体坐标系与世界坐标系不在重合
	程序计算: 渲染程序计算时的旋转顺序是固定的
	万向节锁: Y旋转90后物体坐标系与世界坐标系xz重合
	插值:     欧拉角直接插值不平滑,会抖动
四元数
	四元数用于在两个已知角度之间进行平滑插值

布娃娃
      是指给角色模型设定关键骨骼(头、左右手臂、左右手肘、左右脚、左右小腿、左右大腿),
      控制骨骼动作来模拟人物动画,因为皮肤跟随骨骼移动,因此骨骼有可能移动到不可能出现的位置