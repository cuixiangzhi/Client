OpenGL  左手坐标系,Z轴朝里,指向屏幕内
		

		人眼立体成像,两只眼睛观察同一物体,物体上的点与两眼有个夹角,叫做视差角(深度信息),角度越小距离越远,越大距离越近
		立体电影则是摄像机两个镜头模拟人的双眼,记录两幅图像,观看时使用3D眼镜
		
		OPENGL 是一个大状态机,它的渲染流程是否无法改变的,能修改的是渲染过程中的一些控制状态变量,从而修改渲染结果
		openGL是一个规范,各个显卡硬件厂商制作遵循该规范的驱动程序

		模型坐标系(模型矩阵)->世界坐标系(VIEW矩阵)->摄像机坐标系(PROJ矩阵)->CVV裁剪坐标系(透视除法)->NDC坐标系(视口变换)->屏幕坐标系
		OPENGL矩阵乘法是左乘,矩阵变换顺序为 P V M缩放 M旋转 M平移 3DPOINT

		M矩阵 TRS,模型内部坐标点通过M矩阵变换为世界坐标点
		V矩阵 TR逆矩阵R逆T逆,世界坐标点通过V矩阵变换为相机坐标点
		P矩阵 ,相机坐标点通过P矩阵变换为裁剪坐标点

矩阵变换 shader计算时坐标点是相对于物体坐标系的坐标
		 TRS矩阵是物体坐标系原点在世界坐标系下的变换矩阵,每个变换都是相对于物体坐标系的,因此需要先平移后旋转
		 模型矩阵*物体坐标点,也就是坐标点在物体坐标系变换后进行平移变换
		
亮度    颜色亮度
饱和度  颜色纯度

Gamma空间&Liner空间
    sRGB 标记该图片是否存储为Gamma格式,开启sRGB的图片在采样tex2D(tex,uv)时会把Gamma像素计算到线性空间中,
	Gamma流程: 输入图片->Shader->显示器Gamma解码
	Liner流程: 输入图片->Gamma解码->Shader->Gamma编码->显示器Gamma解码
	后处理会进行Gamma解码和编码,确保计算在线性空间内
	因此Liner空间下shader计算结果跨平台时更接近,Gamma偏差更大
	Alpha值不参与Gamma矫正
	1.CRT显示器对颜色输出是非线性的,因此需要对原始颜色进行Encode操作,使得CRT的Decode操作输出结果接近真实
	2.LCD显示器也会做相应的非线性处理

	线性需要OPENGL ES 3.0支持

欧拉角
	旋转顺序: 物体坐标系下,绕xyz三个轴分别进行旋转,旋转是有先后顺序的,顺序不同结果不同
	坐标系:   旋转之后物体坐标系与世界坐标系不在重合
	程序计算: 渲染程序计算时的旋转顺序是固定的
	万向节锁: Y旋转90后物体坐标系与世界坐标系xz重合
	插值:     欧拉角直接插值不平滑,会抖动
四元数
	四元数用于在两个已知角度之间进行平滑插值