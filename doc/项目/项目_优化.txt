项目优化
    基础
        LOD
            层次细节,根据物体所处的位置显示不同精度的模型或者使用不同的渲染策略
            MESH_LOAD
                使用方式:
                    添加LODGroup组件,增加LOD,摄像机图标拖拽可以查看具体LOD效果
                    每个LOD设置Renderer列表
                    每个LOD左侧标识的百分比代表物体在屏幕空间占屏比低于该值时使用这个LOD的策略
                    物体占屏比是通过当前屏幕空间AABB和近平面时物体的AABB的比例值来计算
                    LOD支持淡入淡出,通过uniform变量unity_LODFade.x来获取blendfactor,LOD_FADE_PERCENTAGE|LOD_FADE_CROSSFADE
                全局配置
                    Unity->Edit->QualitySetting
                    MaximumLODLevel控制使用的最大LOD级别,超过这个值不会被编译
                    LODBias控制在两个LOD之间的如何使用,0到1越接近1越靠前
            SHADER_LOD
                使用方式:
                    给每个shader的pass增加 LOD 限定值
                    通过shader.globalMaximumLODLevel设置当前渲染质量,低于该值的shader的pass才会被使用
                    通过shader.maximumLodLevel设置特定shader的渲染质量
        CULL
            根据是否在视椎体内直接控制显示隐藏
            根据四叉树计算是否在视野内,远处的物体使用天空盒
            优点:占用内存小 缺点:远处的物体直接被隐藏
    SHADER
        由于宏定义太多导致shader变体很多,甚至会有几百万变体
        变体会根据Shader.EnableKeywords开启全局key,Material.EnableKeywords开启单个key,keywords最多256个,#ifdef #endif宏来使用
        使用#pragma shader_feature|multi_compile定义,shader_feature定义的没用到不会被编译
        不仅增加了build时间,运行时也会由于变体太多增加加载时间并增加内存占用
        build时间优化:
    场景
    角色
    动画
    特效
    音效
    视频
    NGUI
    代码
场景优化:
    LOD方案
    shader分级 pbr高中低和非pbr
    远处物体合并
    带后期200dc
效果优化:
    地形、水、树、草、雾、角色、云、木质效果和金属效果提升
    GPUInstance、烘焙、阴影、运动