
//------------------------------------------------------------------------------
// <auto-generated>
//	   This code was generated by a tool.
//
//	   Changes to this file may cause incorrect behavior and will be lost if
//	   the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;
using System.IO;

public partial class DatasManager
{
		private void DoLoadAllDatas()
		{
#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/AttrInfoData...", 0.043956f);
#endif
		LoadData("Datum/AttrInfoData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(AttrInfoData.AttrInfoData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				AttrInfoData.AttrInfoDatatable cdt = Deserialize<AttrInfoData.AttrInfoDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(AttrInfoData.AttrInfoData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});

		});
		//export from 属性定义表
#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/BattleInfomationData...", 0.065934f);
#endif
		LoadData("Datum/BattleInfomationData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(BattleInfomationData.BattleInfomationData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				BattleInfomationData.BattleInfomationDatatable cdt = Deserialize<BattleInfomationData.BattleInfomationDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(BattleInfomationData.BattleInfomationData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});

		});
		//export from 战斗信息表
#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/CharacterData...", 0.230769f);
#endif
		LoadData("Datum/CharacterData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(CharacterData.CharacterData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				CharacterData.CharacterDatatable cdt = Deserialize<CharacterData.CharacterDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(CharacterData.CharacterData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});

		});
		//export from 武将表
#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/ConditionAttrTypeData...", 0.241758f);
#endif
		LoadData("Datum/ConditionAttrTypeData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(ConditionAttrTypeData.ConditionAttrTypeData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				ConditionAttrTypeData.ConditionAttrTypeDatatable cdt = Deserialize<ConditionAttrTypeData.ConditionAttrTypeDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(ConditionAttrTypeData.ConditionAttrTypeData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});
		});
		//export from 条件属性类型表
#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/MonsterData...", 0.576923f);
#endif
		LoadData("Datum/MonsterData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(MonsterData.MonsterData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				MonsterData.MonsterDatatable cdt = Deserialize<MonsterData.MonsterDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(MonsterData.MonsterData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});
		});
		//export from 怪物表
#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/SectionData...", 0.681319f);
#endif
		LoadData("Datum/SectionData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(SectionData.SectionData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				SectionData.SectionDatatable cdt = Deserialize<SectionData.SectionDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(SectionData.SectionData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});
		});
		//export from Section
#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/StageData...", 0.763736f);
#endif
		LoadData("Datum/StageData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(StageData.StageData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				StageData.StageDatatable cdt = Deserialize<StageData.StageDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(StageData.StageData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});
		});
		//export from 关卡表

#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/StageEventHandlerData...", 0.769231f);
#endif
		LoadData("Datum/StageEventHandlerData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(StageEventHandlerData.StageEventHandlerData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				StageEventHandlerData.StageEventHandlerDatatable cdt = Deserialize<StageEventHandlerData.StageEventHandlerDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(StageEventHandlerData.StageEventHandlerData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});
		});
		//export from 关卡处理函数表

#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/StageTriggerEventData...", 0.780220f);
#endif
		LoadData("Datum/StageTriggerEventData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(StageTriggerEventData.StageTriggerEventData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				StageTriggerEventData.StageTriggerEventDatatable cdt = Deserialize<StageTriggerEventData.StageTriggerEventDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(StageTriggerEventData.StageTriggerEventData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});
		});
		//export from 关卡事件表

#if UNITY_EDITOR
		if(!Application.isPlaying)
			UnityEditor.EditorUtility.DisplayProgressBar("Loading...", "Datum/TowerData...", 0.917582f);
#endif
		LoadData("Datum/TowerData", (TextAsset textAsset)=>
		{
			deserializeCallBacks.Add(typeof(TowerData.TowerData), () =>
			{
				ms.Seek(0, SeekOrigin.Begin);
				ms.Write(textAsset.bytes,0,textAsset.bytes.Length);
				ms.SetLength(textAsset.bytes.Length);
				ms.Seek(0, SeekOrigin.Begin);
				TowerData.TowerDatatable cdt = Deserialize<TowerData.TowerDatatable>(ms);
				Dictionary<int, object> data = new Dictionary<int, object>();
				datas[typeof(TowerData.TowerData)] = data;
				for (int i = 0; i < cdt.tlist.Count; i++)
				{
					data[cdt.tlist[i].ID] = cdt.tlist[i];
				}
			});
		});
		//export from 防御塔
#if UNITY_EDITOR
		UnityEditor.EditorUtility.ClearProgressBar();
#endif
	}
	private int m_nTotalDatumCount = 10;
}